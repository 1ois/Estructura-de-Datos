
Eliminar Primer Elemento
inicio=inicio.sgte //java y c#

------------------------
p=inicio;
inicio = p.sgte;
delete p;
// en java en c# no hay una instruccion delete

-------------------------------------------
Retornar al anterior

actual =buscar(40);

p=inicio;
while(p.sgte !=actual)
p=p.sgte;


-----------------------------
Eliminar ultimo Elemento


actual=buscar(40);
anterior=retornarAnterior(Actual)
anterior.sgte=null
-----------------------------
Eliminar entre 2 Nodos


actual=buscar(21);
anterior=retornarAnterior(Actual);
anterior.sgte=actual.sgte;


//Este metodo es igual al ultimo elemento por ende solo hay 2 metodos
//

--------------------------
La busqueda y ordenamiento  resulta mas eficiente 
en un Vector

insercion resulta mas eficione en una lista
-------------------------------
INSERCION
(LISTAS)


nuevo = new Nodo();
nuevo.info=40
nuevo.sgte=inicio
inicio=nuevo;
//es igual al metodo adicionar del vector pero no le agregamos un if
----------------------------
INSERCION
insertar el canal 40 despues del canal 42


(Entre dos Nodos)
actual= buscar(42)
nuevo =new Nodo()

nuevo.info=40;
nuevo.sgte=actual.sgte;
actual.sgte=nuevo;
--------------------------
INSERCCION
Insertar el canal 40 antes del canal 21


actual= buscar(21)
nuevo=new Nodo()
nuevo.info=40
nuevo.sgte=actual
anterior=retornarAnterior(Actual)
anterior.sgte=nuevo


------------------------
Clase bidedimensional
Matriz (Clase 4)
Sino se especifica se asume por filas 
(defaul)
ademas , dependera del n°filas n°columnas

bucar(42);

modificar(24,1,3);

Se tienen agregar o eliminar a toda una fila o todo una columna
   
 int matriculados[][]={{16,24,20},{24,30,26}};
  int fil,col;
    public FrmPrincipal() {
        
        initComponents();
        fil=matriculados.length; //numero de filas 
        col=matriculados[0].length; // numero de columnas
    }

por convecion se pone 0 pero tambien puede ir 1 ,2 o otro numero
       

------------------------------------------------------

Uso la variable acumulador
	int i,j;
        int acum;
        txaResultado.setText(""); // PRAR QUE  SE REFRESQUE LOS DATOS Y NO SE REPITAN
        
        for(i=0;i<fil;i++){
              acum=0;
              for(j=0;j<col;j++){
                   acum=matriculados[i][j]+acum;
                
              }
              txaPorTurno.append(acum +"\n\n");     
        txaResultado.append("\n\n"); 
        }
---------------------------------------------


PILAS
(UETS)
"ultimo en entrar primero en salir"
n -> cantidad de elementos
cima -> posicion que se encuentra el ultimo valor 
de la pila
-----------------------------------------
SI n=5 y  cima =2

y le quitamos los datos que tiene
entonces la cima =-1
(2-3)
-------------
cuando "n" este llena , el valor de  la cima es "n-1"
-----------
En vectores declaramos tipo double para reutilizar en otros proyctos
-----------------------------------------------------------
        for (i = n - 1; i > pilaDeCanales.getCima(); i--)
      
            txaResultado.append("\n");
Poner los datos al final de la pila
-------------------------------------
(Tarea
utilizar el algoritmo dentro de una pila"
transformar infija a posfija )

--------------------------
Metodo de STRIGN
matches() sirbe para averiguar si los caracteres corresponde a un numero o letra
-------------------------------

COLAS
(PEPS)
"Primero en entrar y primero en salir"

el frente y final son variables de posicion
(Validacion para una cola este llena)
n=5

frente =0
final=4

1ro caso
frente =0 y final =n-1
2do caso
frente=final+1;

"cuando una cola esta vacia se le pone -1 a frente y final"

-Cuando la cola hay solo un elemnto la variable 
frente= final;
--------------------------
Con esto se pueede hacer el recorrido de la cola
caso1
for(i=frente;i<=final; frente++)
-----
caso 2
frente=2
final =0
for(i=2,i<=4;i=i+1) -- primero recorremeos este vector " no estan anidadas"
for(i=0;i<=0;i++)
--------
if(frente<=final)
for(i=frente;i<=final; frente++)

for(i=frente,i<=n-1;i=i+1) -- primero recorremeos este vector " no estan anidadas"

for(i=0;i<=final;i++)
------------------------------------------
INTERATIVIDAD
suma(n)= n (n-1)+(n-2)....+2+1
sum(n) = n +sum(n-1)
 

public int sum(int i) //metodo recusivo
{ if( i<=0)
return 0;
else
return i+ sumar(i+1);
------------------------------------
sumar(3)=3 sumar(2)
	2 + sumar(1)
	    1+ sumar(0)
		0
PRIMERO EMPIEZA POR SUMA(0) Y TERMINAR POR SUMAR(3);

---------------------------
mcd(18,12)= mcd(18-12,12)
	mcd(6,12)=mcd(6,12-6)
		mcd(6,6)=mcd(6-6,6)
			mcd(0,6)=6



